
first-->create a basic mongoDB crud operation

1.To pull mongodb image :-
  ----------------------
->docker pull mongo:latest

2.to check wheather the image is pulled or not:
  ---------------------------------------------
->docker images /docker image ls

3.to run my mongo image in docker container
  -----------------------------------------
->docker run -d -p 27017:27017 --name priyankamongodb mongo:latest

Explanation:
-d: Runs the container in detached mode (in the background).
-p 27017:27017: Maps port 27017 of the host to port 27017 of the container.
--name priyankamongodb: Gives a custom name (priyankamongodb) to the container.
mongo:latest: Specifies the Docker image to use (mongo with the latest tag)

4. to verify if your container is running
   --------------------------------------
->docker ps

EXAMPLE:
---------
C:\Users\priya>docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS
   NAMES
7ad3cabfb233   mongo:latest   "docker-entrypoint.sâ€¦"   About a minute ago   Up About a minute   0.0.0.0:27017->27017/tcp   priyankamongodb

5. create a "application.yml" file in resouces
    ------------------------------------------
contents of the file:-
spring:
  data:
    mongodb:
      database: Sportsname//database name of your project
      host: priyankamongodb //container name
      port: 27017 //port of mongodb

6. add your .jar name in the pom.xml file in the build section
   
7. for dokerising your application create a"Dockerfile"
   -----------------------------------------------------

contents of file:-
FROM openjdk:17 //version of your jdk

COPY target/jar_name image_name

EXPOSE 8080

ENTRYPOINT ["java","-jar","image_name"]

8. for creating .jar file run Maven install

9.now we have to build the docker image of our .jar file 

-> docker build -t image_name .

10. to verify your image

-> docker images

11. to link both the images and running the container
    --------------------------------------------------
->docker run -p 8080:8080 --name container_new_name --link mongodb_container_name:mongo -d image_name

->mongodbContainer name:-priyankamongodb

12. to check whether both the containers are running

->docker ps

13. to check logs
-> docker logs "springbootcontainer_name" 

